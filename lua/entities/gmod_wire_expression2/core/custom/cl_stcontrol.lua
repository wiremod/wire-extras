E2Helper.Descriptions["dumpItem(xsc:n)"] = "Dumps state control to the chat area by number identifier"
E2Helper.Descriptions["dumpItem(xsc:s)"] = "Dumps state control to the chat area by string identifier"
E2Helper.Descriptions["dumpItem(xsc:sn)"] = "Dumps state control by number identifier in the specified area by first argument"
E2Helper.Descriptions["dumpItem(xsc:ss)"] = "Dumps state control by string identifier in the specified area by first argument"
E2Helper.Descriptions["getBias(xsc:)"] = "Returns state control control bias"
E2Helper.Descriptions["getControl(xsc:)"] = "Returns state control automated control signal signal"
E2Helper.Descriptions["getControlTerm(xsc:)"] = "Returns state control automated control term signal"
E2Helper.Descriptions["getControlTermD(xsc:)"] = "Returns state control derivative automated control term signal"
E2Helper.Descriptions["getControlTermI(xsc:)"] = "Returns state control integral automated control term signal"
E2Helper.Descriptions["getControlTermP(xsc:)"] = "Returns state control proportional automated control term signal"
E2Helper.Descriptions["getCopy(xsc:)"] = "Returns state control object copy instance"
E2Helper.Descriptions["getCopy(xsc:n)"] = "Returns state control object copy instance with static sampling time"
E2Helper.Descriptions["getErrorDelta(xsc:)"] = "Returns state control process error delta"
E2Helper.Descriptions["getErrorNow(xsc:)"] = "Returns state control process current error"
E2Helper.Descriptions["getErrorOld(xsc:)"] = "Returns state control process passed error"
E2Helper.Descriptions["getGain(xsc:)"] = "Returns state control proportional term gain, integral term gain and derivative term gain"
E2Helper.Descriptions["getGainD(xsc:)"] = "Returns state control derivative term gain"
E2Helper.Descriptions["getGainI(xsc:)"] = "Returns state control integral term gain"
E2Helper.Descriptions["getGainID(xsc:)"] = "Returns state control integral term gain and derivative term gain"
E2Helper.Descriptions["getGainP(xsc:)"] = "Returns state control proportional term gain"
E2Helper.Descriptions["getGainPD(xsc:)"] = "Returns state control proportional term gain and derivative term gain"
E2Helper.Descriptions["getGainPI(xsc:)"] = "Returns state control proportional term gain and integral term gain"
E2Helper.Descriptions["getManual(xsc:)"] = "Returns state control manual control signal value"
E2Helper.Descriptions["getPower(xsc:)"] = "Returns state control proportional term power, integral term power and derivative term power"
E2Helper.Descriptions["getPowerD(xsc:)"] = "Returns state control derivative term power"
E2Helper.Descriptions["getPowerI(xsc:)"] = "Returns state control integral term power"
E2Helper.Descriptions["getPowerID(xsc:)"] = "Returns state control integral term power and derivative term power"
E2Helper.Descriptions["getPowerP(xsc:)"] = "Returns state control proportional term power"
E2Helper.Descriptions["getPowerPD(xsc:)"] = "Returns state control proportional term power and derivative term power"
E2Helper.Descriptions["getPowerPI(xsc:)"] = "Returns state control proportional term power and integral term power"
E2Helper.Descriptions["getTimeBench(xsc:)"] = "Returns state control process benchmark time"
E2Helper.Descriptions["getTimeDelta(xsc:)"] = "Returns state control dymamic process time delta"
E2Helper.Descriptions["getTimeNow(xsc:)"] = "Returns state control process current time"
E2Helper.Descriptions["getTimeOld(xsc:)"] = "Returns state control process passed time"
E2Helper.Descriptions["getTimeRatio(xsc:)"] = "Returns state control process time ratio"
E2Helper.Descriptions["getTimeSample(xsc:)"] = "Returns state control static process time delta"
E2Helper.Descriptions["getType(xsc:)"] = "Returns state control control type"
E2Helper.Descriptions["getWindup(xsc:)"] = "Returns state control windup lower bound and windup upper bound"
E2Helper.Descriptions["getWindupD(xsc:)"] = "Returns state control windup lower bound"
E2Helper.Descriptions["getWindupU(xsc:)"] = "Returns state control windup upper bound"
E2Helper.Descriptions["isActive(xsc:)"] = "Checks state control activated working flag"
E2Helper.Descriptions["isCombined(xsc:)"] = "Checks state control combined flag spreading proportional term gain across others"
E2Helper.Descriptions["isIntegrating(xsc:)"] = "Checks integral enabled flag"
E2Helper.Descriptions["isInverted(xsc:)"] = "Checks state control inverted feedback flag of the reference and setpoint"
E2Helper.Descriptions["isManual(xsc:)"] = "Checks state control manual control flag"
E2Helper.Descriptions["newStControl()"] = "Returns state control object with dynamic sampling time"
E2Helper.Descriptions["newStControl(n)"] = "Returns state control object with static sampling time"
E2Helper.Descriptions["noStControl()"] = "Returns invalid state control object"
E2Helper.Descriptions["remGain(xsc:)"] = "Removes state control proportional term gain, integral term gain and derivative term gain"
E2Helper.Descriptions["remGainD(xsc:)"] = "Removes state control derivative term gain"
E2Helper.Descriptions["remGainI(xsc:)"] = "Removes state control integral term gain"
E2Helper.Descriptions["remGainID(xsc:)"] = "Removes state control integral term gain and derivative term gain"
E2Helper.Descriptions["remGainP(xsc:)"] = "Removes state control proportional term gain"
E2Helper.Descriptions["remGainPD(xsc:)"] = "Removes state control proportional term gain and derivative term gain"
E2Helper.Descriptions["remGainPI(xsc:)"] = "Removes state control proportional term gain and integral term gain"
E2Helper.Descriptions["remTimeSample(xsc:)"] = "Removes state control static process time delta"
E2Helper.Descriptions["remWindup(xsc:)"] = "Removes state control windup lower bound and windup upper bound"
E2Helper.Descriptions["remWindupD(xsc:)"] = "Removes state control windup lower bound"
E2Helper.Descriptions["remWindupU(xsc:)"] = "Removes state control windup upper bound"
E2Helper.Descriptions["resState(xsc:)"] = "Resets state control automated internal parameters"
E2Helper.Descriptions["setBias(xsc:n)"] = "Updates state control control bias"
E2Helper.Descriptions["setGain(xsc:nnn)"] = "Updates state control proportional term gain, integral term gain and derivative term gain"
E2Helper.Descriptions["setGain(xsc:r)"] = "Updates state control proportional term gain, integral term gain and derivative term gain"
E2Helper.Descriptions["setGain(xsc:v)"] = "Updates state control proportional term gain, integral term gain and derivative term gain"
E2Helper.Descriptions["setGainD(xsc:n)"] = "Updates state control derivative term gain"
E2Helper.Descriptions["setGainI(xsc:n)"] = "Updates state control integral term gain"
E2Helper.Descriptions["setGainID(xsc:nn)"] = "Updates state control integral term gain and derivative term gain"
E2Helper.Descriptions["setGainID(xsc:r)"] = "Updates state control integral term gain and derivative term gain"
E2Helper.Descriptions["setGainID(xsc:xv2)"] = "Updates state control derivative term gain and derivative term gain"
E2Helper.Descriptions["setGainP(xsc:n)"] = "Updates state control proportional term gain"
E2Helper.Descriptions["setGainPD(xsc:nn)"] = "Updates state control proportional term gain and derivative term gain"
E2Helper.Descriptions["setGainPD(xsc:r)"] = "Updates state control proportional term gain and derivative term gain"
E2Helper.Descriptions["setGainPD(xsc:xv2)"] = "Updates state control proportional term gain and derivative term gain"
E2Helper.Descriptions["setGainPI(xsc:nn)"] = "Updates state control proportional term gain and integral term gain"
E2Helper.Descriptions["setGainPI(xsc:r)"] = "Updates state control proportional term gain and integral term gain"
E2Helper.Descriptions["setGainPI(xsc:xv2)"] = "Updates state control proportional term gain and integral term gain"
E2Helper.Descriptions["setIsActive(xsc:n)"] = "Updates state control activated working flag"
E2Helper.Descriptions["setIsCombined(xsc:n)"] = "Updates combined flag spreading proportional term gain across others"
E2Helper.Descriptions["setIsIntegrating(xsc:n)"] = "Updates integral enabled flag"
E2Helper.Descriptions["setIsInverted(xsc:n)"] = "Updates state control inverted feedback flag of the reference and setpoint"
E2Helper.Descriptions["setIsManual(xsc:n)"] = "Updates state control manual control signal value"
E2Helper.Descriptions["setManual(xsc:n)"] = "Updates state control manual control value"
E2Helper.Descriptions["setPower(xsc:nnn)"] = "Updates state control proportional term power, integral term power and derivative term power"
E2Helper.Descriptions["setPower(xsc:r)"] = "Updates state control proportional term power, integral term power and derivative term power"
E2Helper.Descriptions["setPower(xsc:v)"] = "Updates state control proportional term power, integral term power and derivative term power"
E2Helper.Descriptions["setPowerD(xsc:n)"] = "Updates state control derivative term power"
E2Helper.Descriptions["setPowerI(xsc:n)"] = "Updates state control integral term power"
E2Helper.Descriptions["setPowerID(xsc:nn)"] = "Updates state control integral term power and derivative term power"
E2Helper.Descriptions["setPowerID(xsc:r)"] = "Updates state control integral term power and derivative term power"
E2Helper.Descriptions["setPowerID(xsc:xv2)"] = "Updates state control derivative term power and derivative term power"
E2Helper.Descriptions["setPowerP(xsc:n)"] = "Updates state control proportional term power"
E2Helper.Descriptions["setPowerPD(xsc:nn)"] = "Updates state control proportional term power and derivative term power"
E2Helper.Descriptions["setPowerPD(xsc:r)"] = "Updates state control proportional term power and derivative term power"
E2Helper.Descriptions["setPowerPD(xsc:xv2)"] = "Updates state control proportional term power and derivative term power"
E2Helper.Descriptions["setPowerPI(xsc:nn)"] = "Updates state control proportional term power and integral term power"
E2Helper.Descriptions["setPowerPI(xsc:r)"] = "Updates state control proportional term power and integral term power"
E2Helper.Descriptions["setPowerPI(xsc:xv2)"] = "Updates state control proportional term power and integral term power"
E2Helper.Descriptions["setState(xsc:nn)"] = "Works state control automated internal parameters"
E2Helper.Descriptions["setTimeSample(xsc:n)"] = "Updates state control static process time delta"
E2Helper.Descriptions["setWindup(xsc:nn)"] = "Updates state control windup lower bound and windup upper bound"
E2Helper.Descriptions["setWindup(xsc:r)"] = "Updates state control windup lower bound and windup upper bound"
E2Helper.Descriptions["setWindup(xsc:xv2)"] = "Updates state control windup lower bound and windup upper bound"
E2Helper.Descriptions["setWindupD(xsc:n)"] = "Updates state control windup lower bound"
E2Helper.Descriptions["setWindupU(xsc:n)"] = "Updates state control windup upper bound"
E2Helper.Descriptions["tuneAH(xsc:nnn)"] = "Tunes the state control using the Astrom-Hagglund method (AH)"
E2Helper.Descriptions["tuneAutoZN(xsc:nn)"] = "Tunes the state control using the Ziegler-Nichols auto-oscilation method (ZN)"
E2Helper.Descriptions["tuneAutoZN(xsc:nns)"] = "Tunes the state control using the Ziegler-Nichols auto-oscilation method with overshot option (ZN)"
E2Helper.Descriptions["tuneIAE(xsc:nnn)"] = "Tunes the state control using the integral absolute error method (IAE)"
E2Helper.Descriptions["tuneISE(xsc:nnn)"] = "Tunes the state control using the integral square error method (ISE)"
E2Helper.Descriptions["tuneITAE(xsc:nnn)"] = "Tunes the state control using the integral of time-weighted absolute error method (ITAE)"
E2Helper.Descriptions["tuneOverCHRLR(xsc:nnn)"] = "Tunes the state control using the Chien-Hrones-Reswick method (CHR) load rejection 20% overshot"
E2Helper.Descriptions["tuneOverCHRSP(xsc:nnn)"] = "Tunes the state control using the Chien-Hrones-Reswick method (CHR) set point track 20% overshot"
E2Helper.Descriptions["tuneProcCC(xsc:nnn)"] = "Tunes the state control using the Choen-Coon method (CC)"
E2Helper.Descriptions["tuneProcCHRLR(xsc:nnn)"] = "Tunes the state control using the Chien-Hrones-Reswick method (CHR) load rejection"
E2Helper.Descriptions["tuneProcCHRSP(xsc:nnn)"] = "Tunes the state control using the Chien-Hrones-Reswick method (CHR) set point track"
E2Helper.Descriptions["tuneProcZN(xsc:nnn)"] = "Tunes the state control using the Ziegler-Nichols plant process method (ZN)"
